# -*- coding: utf-8 -*-
"""K-Means_Cluster_Ramdom_Blobs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17sGfHRCVZlsQmzL5kjozP8PPseB4VdLW
"""

from sklearn.datasets import make_blobs
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# print(make_blobs)
X, y = make_blobs(n_samples = 150, n_features = 2, centers = 3,
                  cluster_std = 0.5, shuffle = True, random_state = 1)
print("X.shape: ", X.shape, ", y.shape: ", y.shape)
# print (X)

plt.scatter(X[:, 0], X[:,1], marker = "o", s = 49, alpha=0.7)
plt.title('K-means Clustering with Random Blobs')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.grid()
plt.show()

kmeans = KMeans(n_clusters =3)
pred = kmeans.fit_predict(X)
print ('prediction : ', pred)

plt.scatter(X[pred == 0, 0], X[pred == 0, 1], marker = "o", s = 50, c = "red", label = "cluster1")
plt.scatter(X[pred == 1, 0], X[pred == 1, 1], marker = "s", s = 50, c = "green", label = "cluster2")
plt.scatter(X[pred == 2, 0], X[pred == 2, 1], marker = "v", s = 50, c = "blue", label = "cluster3")
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1],
            marker = "+", s = 80, c = "black", label = "center")
plt.legend()
plt.grid()
plt.show()

